c("very good (+10)", "good (+5)", "default (+0)", "bad (-5)", "very bad (-10)"),
col = c("blue", "cyan", "black", "pink", "red", "darkred"),
lwd = 3,
cex = 0.5,
title = "nutrition")
dev.off()
png("nutritionEffect-mortality.png", width = 800, height = 480)
par(cex = 2)
plot(c(1, 151), c(0, 1), type = "n",
main = "Coale-Demeny model of mortality\nwith nutrition effect (dimReturns = 0.1)", cex.main = 1,
xlab = "AGE", cex.lab = 1.5,
ylab = "q(x)",
xlim = c(0, 100)
)
# default mortality (+0)
lines(1:151, generateCoaleDemenyLifeTable(), col = "black", lwd = 3)
# very good nutrition (+10)
lines(1:151,
netMortCurve(consumed = 25, numPeople = 15, mort = generateCoaleDemenyLifeTable()),
col = "blue", lwd = 3)
# good nutrition (+5)
lines(1:151,
netMortCurve(consumed = 20, numPeople = 15, mort = generateCoaleDemenyLifeTable()),
col = "cyan", lwd = 3)
# bad nutrition (-5)
lines(1:151,
netMortCurve(consumed = 10, numPeople = 15, mort = generateCoaleDemenyLifeTable()),
col = "pink", lwd = 3)
# very bad nutrition (-10)
lines(1:151,
netMortCurve(consumed = 5, numPeople = 15, mort = generateCoaleDemenyLifeTable()),
col = "red", lwd = 3)
# starvation (none consumed)
lines(1:151,
netMortCurve(consumed = 0, numPeople = 15, mort = generateCoaleDemenyLifeTable()),
col = "darkred", lwd = 3)
text(25, 0.8,
expression(
"nutEffect" == bgroup("{", atop(paste("nutrition " %*% q(x) %*% "dimReturns, if nutrition" > 0),
paste("nutrition " %*% q(x), " else")))
)
, cex = 1)
legend(80, 0.55,
c("very good (+10)", "good (+5)", "default (+0)", "bad (-5)", "very bad (-10)"),
col = c("blue", "cyan", "black", "pink", "red", "darkred"),
lwd = 3,
cex = 0.5,
title = "nutrition")
dev.off()
png("nutritionEffect-mortality.png", width = 800, height = 480)
par(cex = 2)
plot(c(1, 151), c(0, 1), type = "n",
main = "Coale-Demeny model of mortality\nwith nutrition effect (dimReturns = 0.1)", cex.main = 1,
xlab = "AGE", cex.lab = 1.5,
ylab = "q(x)",
xlim = c(0, 100)
)
# default mortality (+0)
lines(1:151, generateCoaleDemenyLifeTable(), col = "black", lwd = 3)
# very good nutrition (+10)
lines(1:151,
netMortCurve(consumed = 25, numPeople = 15, mort = generateCoaleDemenyLifeTable()),
col = "blue", lwd = 3)
# good nutrition (+5)
lines(1:151,
netMortCurve(consumed = 20, numPeople = 15, mort = generateCoaleDemenyLifeTable()),
col = "cyan", lwd = 3)
# bad nutrition (-5)
lines(1:151,
netMortCurve(consumed = 10, numPeople = 15, mort = generateCoaleDemenyLifeTable()),
col = "pink", lwd = 3)
# very bad nutrition (-10)
lines(1:151,
netMortCurve(consumed = 5, numPeople = 15, mort = generateCoaleDemenyLifeTable()),
col = "red", lwd = 3)
# starvation (none consumed)
lines(1:151,
netMortCurve(consumed = 0, numPeople = 15, mort = generateCoaleDemenyLifeTable()),
col = "darkred", lwd = 3)
text(25, 0.8,
expression(
"nutEffect" == bgroup("{", atop("nutrition " %*% q(x) %*% "dimReturns, if nutrition" > 0,
"nutrition " %*% q(x) * ", else"))
)
, cex = 1)
legend(80, 0.55,
c("very good (+10)", "good (+5)", "default (+0)", "bad (-5)", "very bad (-10)"),
col = c("blue", "cyan", "black", "pink", "red", "darkred"),
lwd = 3,
cex = 0.5,
title = "nutrition")
dev.off()
?atop
png("nutritionEffect-mortality.png", width = 800, height = 480)
par(cex = 2)
plot(c(1, 151), c(0, 1), type = "n",
main = "Coale-Demeny model of mortality\nwith nutrition effect (dimReturns = 0.1)", cex.main = 1,
xlab = "AGE", cex.lab = 1.5,
ylab = "q(x)",
xlim = c(0, 100)
)
# default mortality (+0)
lines(1:151, generateCoaleDemenyLifeTable(), col = "black", lwd = 3)
# very good nutrition (+10)
lines(1:151,
netMortCurve(consumed = 25, numPeople = 15, mort = generateCoaleDemenyLifeTable()),
col = "blue", lwd = 3)
# good nutrition (+5)
lines(1:151,
netMortCurve(consumed = 20, numPeople = 15, mort = generateCoaleDemenyLifeTable()),
col = "cyan", lwd = 3)
# bad nutrition (-5)
lines(1:151,
netMortCurve(consumed = 10, numPeople = 15, mort = generateCoaleDemenyLifeTable()),
col = "pink", lwd = 3)
# very bad nutrition (-10)
lines(1:151,
netMortCurve(consumed = 5, numPeople = 15, mort = generateCoaleDemenyLifeTable()),
col = "red", lwd = 3)
# starvation (none consumed)
lines(1:151,
netMortCurve(consumed = 0, numPeople = 15, mort = generateCoaleDemenyLifeTable()),
col = "darkred", lwd = 3)
text(25, 0.8,
expression(
"nutEffect" == bgroup("{", atop("nutrition " %*% q(x) %*% "dimReturns, if nutrition" > 0,
"nutrition " %*% q(x) * ", else"), "}")
)
, cex = 1)
legend(80, 0.55,
c("very good (+10)", "good (+5)", "default (+0)", "bad (-5)", "very bad (-10)"),
col = c("blue", "cyan", "black", "pink", "red", "darkred"),
lwd = 3,
cex = 0.5,
title = "nutrition")
dev.off()
png("nutritionEffect-mortality.png", width = 800, height = 480)
par(cex = 2)
plot(c(1, 151), c(0, 1), type = "n",
main = "Coale-Demeny model of mortality\nwith nutrition effect (dimReturns = 0.1)", cex.main = 1,
xlab = "AGE", cex.lab = 1.5,
ylab = "q(x)",
xlim = c(0, 100)
)
# default mortality (+0)
lines(1:151, generateCoaleDemenyLifeTable(), col = "black", lwd = 3)
# very good nutrition (+10)
lines(1:151,
netMortCurve(consumed = 25, numPeople = 15, mort = generateCoaleDemenyLifeTable()),
col = "blue", lwd = 3)
# good nutrition (+5)
lines(1:151,
netMortCurve(consumed = 20, numPeople = 15, mort = generateCoaleDemenyLifeTable()),
col = "cyan", lwd = 3)
# bad nutrition (-5)
lines(1:151,
netMortCurve(consumed = 10, numPeople = 15, mort = generateCoaleDemenyLifeTable()),
col = "pink", lwd = 3)
# very bad nutrition (-10)
lines(1:151,
netMortCurve(consumed = 5, numPeople = 15, mort = generateCoaleDemenyLifeTable()),
col = "red", lwd = 3)
# starvation (none consumed)
lines(1:151,
netMortCurve(consumed = 0, numPeople = 15, mort = generateCoaleDemenyLifeTable()),
col = "darkred", lwd = 3)
text(25, 0.8,
expression(
"nutEffect" == group("{", atop("nutrition " %*% q(x) %*% "dimReturns, if nutrition" > 0,
"nutrition " %*% q(x) * ", else"), "}")
)
, cex = 0.5)
legend(80, 0.55,
c("very good (+10)", "good (+5)", "default (+0)", "bad (-5)", "very bad (-10)"),
col = c("blue", "cyan", "black", "pink", "red", "darkred"),
lwd = 3,
cex = 0.5,
title = "nutrition")
dev.off()
png("nutritionEffect-mortality.png", width = 800, height = 480)
par(cex = 2)
plot(c(1, 151), c(0, 1), type = "n",
main = "Coale-Demeny model of mortality\nwith nutrition effect (dimReturns = 0.1)", cex.main = 1,
xlab = "AGE", cex.lab = 1.5,
ylab = "q(x)",
xlim = c(0, 100)
)
# default mortality (+0)
lines(1:151, generateCoaleDemenyLifeTable(), col = "black", lwd = 3)
# very good nutrition (+10)
lines(1:151,
netMortCurve(consumed = 25, numPeople = 15, mort = generateCoaleDemenyLifeTable()),
col = "blue", lwd = 3)
# good nutrition (+5)
lines(1:151,
netMortCurve(consumed = 20, numPeople = 15, mort = generateCoaleDemenyLifeTable()),
col = "cyan", lwd = 3)
# bad nutrition (-5)
lines(1:151,
netMortCurve(consumed = 10, numPeople = 15, mort = generateCoaleDemenyLifeTable()),
col = "pink", lwd = 3)
# very bad nutrition (-10)
lines(1:151,
netMortCurve(consumed = 5, numPeople = 15, mort = generateCoaleDemenyLifeTable()),
col = "red", lwd = 3)
# starvation (none consumed)
lines(1:151,
netMortCurve(consumed = 0, numPeople = 15, mort = generateCoaleDemenyLifeTable()),
col = "darkred", lwd = 3)
text(25, 0.8,
expression(
"nutEffect" == bgroup("{", atop("nutrition " %*% q(x) %*% "dimReturns, if nutrition" > 0,
"nutrition " %*% q(x) * ", else"), "}")
)
, cex = 0.5)
legend(80, 0.55,
c("very good (+10)", "good (+5)", "default (+0)", "bad (-5)", "very bad (-10)"),
col = c("blue", "cyan", "black", "pink", "red", "darkred"),
lwd = 3,
cex = 0.5,
title = "nutrition")
dev.off()
png("nutritionEffect-mortality.png", width = 800, height = 480)
par(cex = 2)
plot(c(1, 151), c(0, 1), type = "n",
main = "Coale-Demeny model of mortality\nwith nutrition effect (dimReturns = 0.1)", cex.main = 1,
xlab = "AGE", cex.lab = 1.5,
ylab = "q(x)",
xlim = c(0, 100)
)
# default mortality (+0)
lines(1:151, generateCoaleDemenyLifeTable(), col = "black", lwd = 3)
# very good nutrition (+10)
lines(1:151,
netMortCurve(consumed = 25, numPeople = 15, mort = generateCoaleDemenyLifeTable()),
col = "blue", lwd = 3)
# good nutrition (+5)
lines(1:151,
netMortCurve(consumed = 20, numPeople = 15, mort = generateCoaleDemenyLifeTable()),
col = "cyan", lwd = 3)
# bad nutrition (-5)
lines(1:151,
netMortCurve(consumed = 10, numPeople = 15, mort = generateCoaleDemenyLifeTable()),
col = "pink", lwd = 3)
# very bad nutrition (-10)
lines(1:151,
netMortCurve(consumed = 5, numPeople = 15, mort = generateCoaleDemenyLifeTable()),
col = "red", lwd = 3)
# starvation (none consumed)
lines(1:151,
netMortCurve(consumed = 0, numPeople = 15, mort = generateCoaleDemenyLifeTable()),
col = "darkred", lwd = 3)
text(30, 0.8,
expression(
"nutEffect" == bgroup("{", atop("nutrition " %*% q(x) %*% "dimReturns, if nutrition" > 0,
"nutrition " %*% q(x) * ", else"), "}")
)
, cex = 0.5)
legend(80, 0.55,
c("very good (+10)", "good (+5)", "default (+0)", "bad (-5)", "very bad (-10)"),
col = c("blue", "cyan", "black", "pink", "red", "darkred"),
lwd = 3,
cex = 0.5,
title = "nutrition")
dev.off()
png("nutrition.png", width = 800, height = 480)
plot(c(0,30), c(-1,1), type = "n",
main = "Nutrition function\n(c = consumed, n = number of people)",
xlab = "consumed", ylab = "output")
lines(0:30, getNutrition(0:30, 15), col = "black")
text(5, 0.5,
expression(
"nutrition" == frac((c - n), n)^3
)
, cex = 1.2)
dev.off()
png("nutritionEffect-mortality.png", width = 800, height = 480)
par(cex = 2)
plot(c(1, 151), c(0, 1), type = "n",
main = "Coale-Demeny model of mortality\nwith nutrition effect (dimReturns = 0.1)", cex.main = 1,
xlab = "AGE", cex.lab = 1.5,
ylab = "q(x)",
xlim = c(0, 100)
)
# default mortality (+0)
lines(1:151, generateCoaleDemenyLifeTable(), col = "black", lwd = 3)
# very good nutrition (+10)
lines(1:151,
netMortCurve(consumed = 25, numPeople = 15, mort = generateCoaleDemenyLifeTable()),
col = "blue", lwd = 3)
# good nutrition (+5)
lines(1:151,
netMortCurve(consumed = 20, numPeople = 15, mort = generateCoaleDemenyLifeTable()),
col = "cyan", lwd = 3)
# bad nutrition (-5)
lines(1:151,
netMortCurve(consumed = 10, numPeople = 15, mort = generateCoaleDemenyLifeTable()),
col = "pink", lwd = 3)
# very bad nutrition (-10)
lines(1:151,
netMortCurve(consumed = 5, numPeople = 15, mort = generateCoaleDemenyLifeTable()),
col = "red", lwd = 3)
# starvation (none consumed)
lines(1:151,
netMortCurve(consumed = 0, numPeople = 15, mort = generateCoaleDemenyLifeTable()),
col = "darkred", lwd = 3)
text(30, 0.8,
expression(
"nutEffect" == bgroup("{", atop("nutrition " %*% q(x) %*% "dimReturns, if nutrition" > 0,
"nutrition " %*% q(x) * ", else"), "}")
)
, cex = 0.5)
legend(80, 0.6,
c("very good (+10)", "good (+5)", "default (+0)", "bad (-5)", "very bad (-10)", "starvation"),
col = c("blue", "cyan", "black", "pink", "red", "darkred"),
lwd = 3,
cex = 0.5,
title = "nutrition")
dev.off()
png("nutritionEffect-mortality.png", width = 800, height = 480)
par(cex = 2)
plot(c(1, 151), c(0, 1), type = "n",
main = "Coale-Demeny model of mortality\nwith nutrition effect (dimReturns = 0.1)", cex.main = 1,
xlab = "AGE", cex.lab = 1.5,
ylab = "q(x)",
xlim = c(0, 100)
)
# default mortality (+0)
lines(1:151, generateCoaleDemenyLifeTable(), col = "black", lwd = 3)
# very good nutrition (+10)
lines(1:151,
netMortCurve(consumed = 25, numPeople = 15, mort = generateCoaleDemenyLifeTable()),
col = "blue", lwd = 3)
# good nutrition (+5)
lines(1:151,
netMortCurve(consumed = 20, numPeople = 15, mort = generateCoaleDemenyLifeTable()),
col = "cyan", lwd = 3)
# bad nutrition (-5)
lines(1:151,
netMortCurve(consumed = 10, numPeople = 15, mort = generateCoaleDemenyLifeTable()),
col = "pink", lwd = 3)
# very bad nutrition (-10)
lines(1:151,
netMortCurve(consumed = 5, numPeople = 15, mort = generateCoaleDemenyLifeTable()),
col = "red", lwd = 3)
# starvation (none consumed)
lines(1:151,
netMortCurve(consumed = 0, numPeople = 15, mort = generateCoaleDemenyLifeTable()),
col = "darkred", lwd = 3)
text(30, 0.8,
expression(
"nutEffect" == bgroup("{", atop(" nutrition " %*% q(x) %*% "dimReturns, if nutrition" > 0 * " ",
" nutrition " %*% q(x) * ", else "), "}")
)
, cex = 0.5)
legend(80, 0.6,
c("very good (+10)", "good (+5)", "default (+0)", "bad (-5)", "very bad (-10)", "starvation"),
col = c("blue", "cyan", "black", "pink", "red", "darkred"),
lwd = 3,
cex = 0.5,
title = "nutrition")
dev.off()
# plot nutrition effect on mortality
png("nutritionEffect-mortality.png", width = 800, height = 480)
par(cex = 2)
plot(c(1, 151), c(0, 1), type = "n",
main = "Coale-Demeny model of mortality (region = west, level = 8)\nwith nutrition effect (dimReturns = 0.1)", cex.main = 1,
xlab = "AGE", cex.lab = 1.5,
ylab = "q(x)",
xlim = c(0, 100)
)
# default mortality (+0)
lines(1:151, generateCoaleDemenyLifeTable(), col = "black", lwd = 3)
# very good nutrition (+10)
lines(1:151,
netMortCurve(consumed = 25, numPeople = 15, mort = generateCoaleDemenyLifeTable()),
col = "blue", lwd = 3)
# good nutrition (+5)
lines(1:151,
netMortCurve(consumed = 20, numPeople = 15, mort = generateCoaleDemenyLifeTable()),
col = "cyan", lwd = 3)
# bad nutrition (-5)
lines(1:151,
netMortCurve(consumed = 10, numPeople = 15, mort = generateCoaleDemenyLifeTable()),
col = "pink", lwd = 3)
# very bad nutrition (-10)
lines(1:151,
netMortCurve(consumed = 5, numPeople = 15, mort = generateCoaleDemenyLifeTable()),
col = "red", lwd = 3)
# starvation (none consumed)
lines(1:151,
netMortCurve(consumed = 0, numPeople = 15, mort = generateCoaleDemenyLifeTable()),
col = "darkred", lwd = 3)
text(30, 0.8,
expression(
"nutEffect" == bgroup("{", atop(" nutrition " %*% q(x) %*% "dimReturns, if nutrition" > 0 * " ",
" nutrition " %*% q(x) * ", else "), "}")
)
, cex = 0.5)
legend(80, 0.6,
c("very good (+10)", "good (+5)", "default (+0)", "bad (-5)", "very bad (-10)", "starvation"),
col = c("blue", "cyan", "black", "pink", "red", "darkred"),
lwd = 3,
cex = 0.5,
title = "nutrition")
dev.off()
# plot nutrition effect on mortality
png("nutritionEffect-mortality.png", width = 800, height = 480)
par(cex = 2)
plot(c(1, 151), c(0, 1), type = "n",
main = "Coale-Demeny model of mortality (region = west, level = 8)\nwith nutrition effect (dimReturns = 0.1)", cex.main = 1,
xlab = "AGE", cex.lab = 1.5,
ylab = "q(x)",
xlim = c(0, 100)
)
# default mortality (+0)
lines(1:151, generateCoaleDemenyLifeTable(), col = "black", lwd = 3)
# very good nutrition (+10)
lines(1:151,
netMortCurve(consumed = 25, numPeople = 15, mort = generateCoaleDemenyLifeTable()),
col = "blue", lwd = 3)
# good nutrition (+5)
lines(1:151,
netMortCurve(consumed = 20, numPeople = 15, mort = generateCoaleDemenyLifeTable()),
col = "cyan", lwd = 3)
# bad nutrition (-5)
lines(1:151,
netMortCurve(consumed = 10, numPeople = 15, mort = generateCoaleDemenyLifeTable()),
col = "pink", lwd = 3)
# very bad nutrition (-10)
lines(1:151,
netMortCurve(consumed = 5, numPeople = 15, mort = generateCoaleDemenyLifeTable()),
col = "red", lwd = 3)
# starvation (none consumed)
lines(1:151,
netMortCurve(consumed = 0, numPeople = 15, mort = generateCoaleDemenyLifeTable()),
col = "darkred", lwd = 3)
text(30, 0.8,
expression(
"nutEffect" == bgroup("{", atop(" nutrition " %*% q(x) %*% "dimReturns, if nutrition" > 0 * " ",
" nutrition " %*% (1 - q(x)) * ", else "), "}")
)
, cex = 0.5)
legend(80, 0.6,
c("very good (+10)", "good (+5)", "default (+0)", "bad (-5)", "very bad (-10)", "starvation"),
col = c("blue", "cyan", "black", "pink", "red", "darkred"),
lwd = 3,
cex = 0.5,
title = "nutrition")
dev.off()
plot(c(0,30), c(-1,1), type = "n",
main = "Nutrition function\n(c = consumed, n = number of people)",
xlab = "consumed", ylab = "output")
lines(0:30, getNutrition(0:30, 15), col = "black")
text(5, 0.5,
expression(
"nutrition" == frac((c - n), n)^3
)
, cex = 1.2)
png("nutrition.png", width = 800, height = 480)
plot(c(0,30), c(-1,1), type = "n",
main = "Nutrition function\n(consumed = 0 to 30, number of people = 15)",
xlab = "consumed", ylab = "output")
lines(0:30, getNutrition(0:30, 15), col = "black")
text(5, 0.5,
expression(
"nutrition" == frac((c - n), n)^3
)
, cex = 1.2)
dev.off()
png("nutrition.png", width = 800, height = 480)
plot(c(0,30), c(-1,1), type = "n",
main = "Nutrition function\n(example: consumed = 0 to 30, number of people = 15)",
xlab = "consumed", ylab = "output")
lines(0:30, getNutrition(0:30, 15), col = "black")
text(5, 0.5,
expression(
"nutrition" == frac(("consumed" - "numberOfPeople"), "numberOfPeople")^3
)
, cex = 1.2)
dev.off()
plot(c(0,30), c(-1,1), type = "n",
main = "Nutrition function\n(example: consumed = 0 to 30, number of people = 15)",
xlab = "consumed", ylab = "output")
lines(0:30, getNutrition(0:30, 15), col = "black")
text(10, 0.5,
expression(
"nutrition" == frac(("consumed" - "numberOfPeople"), "numberOfPeople")^3
)
, cex = 1.2)
png("nutrition.png", width = 800, height = 480)
plot(c(0,30), c(-1,1), type = "n",
main = "Nutrition function\n(example: consumed = 0 to 30, number of people = 15)",
xlab = "consumed", ylab = "output")
lines(0:30, getNutrition(0:30, 15), col = "black")
text(10, 0.5,
expression(
"nutrition" == bgroup("(", frac(("consumed" - "numberOfPeople"), "numberOfPeople"), ")")^3
)
, cex = 1.2)
dev.off()
png("nutrition.png", width = 800, height = 480)
plot(c(0,30), c(-1,1), type = "n",
main = "Nutrition function\n(example: consumed = 0 to 30, number of people = 15)",
xlab = "consumed", ylab = "output")
lines(0:30, getNutrition(0:30, 15), col = "black")
text(10, 0.5,
expression(
"nutrition" == bgroup("(", frac("consumed" - "numberOfPeople", "numberOfPeople"), ")")^3
)
, cex = 1.2)
dev.off()
